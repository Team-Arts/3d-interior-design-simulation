#pragma once
#include <Windows.h>
#include <memory>
#include <directxtk/SimpleMath.h>

namespace visualnnz
{
using std::shared_ptr;

// 전방 선언
class Camera;
class Character;

enum class InputMode
{
    Camera,     // 카메라 제어 모드
    Character,  // 캐릭터 제어 모드
    Object      // 오브젝트 조작 모드
};

class InputManager
{
public:
    static InputManager& GetInstance();

    bool Initialize(HWND hWnd);
    void Update(float deltaTime);

    // 키 입력 확인
    bool IsKeyPressed(int vkCode) const;
    bool IsKeyDown(int vkCode) const;
    bool IsKeyUp(int vkCode) const;

    // 마우스 입력
    void OnMouseMove(int x, int y);
    void SetCamera(shared_ptr<Camera> camera) { m_camera = camera; }
    void SetCharacter(shared_ptr<Character> character) { m_character = character; }

    // 입력 모드 설정
    void SetInputMode(InputMode mode) { m_inputMode = mode; }
    InputMode GetInputMode() const { return m_inputMode; }

    // 설정
    void SetMouseSensitivity(float sensitivity) { m_mouseSensitivity = sensitivity; }
    void SetMoveSpeed(float speed) { m_moveSpeed = speed; }
    void SetCharacterSpeed(float speed) { m_characterSpeed = speed; }

    // 입력 상태 확인
    bool IsCharacterControlActive() const { return m_inputMode == InputMode::Character; }

private:
    InputManager() = default;
    ~InputManager() = default;
    InputManager(const InputManager &) = delete;
    InputManager &operator=(const InputManager &) = delete;

    void ProcessKeyboardInput(float deltaTime);
    void ProcessMouseInput();
    void ProcessCameraInput(float deltaTime);
    void ProcessCharacterInput(float deltaTime);

    HWND m_hWnd = nullptr;
    shared_ptr<Camera> m_camera;
    shared_ptr<Character> m_character;

    // 입력 모드
    InputMode m_inputMode = InputMode::Camera;

    // 키 상태
    bool m_keyStates[256] = {false};
    bool m_prevKeyStates[256] = {false};

    // 마우스 설정
    float m_mouseSensitivity = 0.002f;
    float m_moveSpeed = 5.0f;
    float m_characterSpeed = 3.0f;
    int m_lastMouseX = 0;
    int m_lastMouseY = 0;
    bool m_firstMouse = true;

    // 싱글턴 인스턴스를 위한 static 멤버 (private으로 이동)
    static shared_ptr<InputManager> s_instance;
};
} // namespace visualnnz